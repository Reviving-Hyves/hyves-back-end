name: Post
run-name: "${{ github.actor }} ran ${{ github.workflow }} on ${{ github.ref_name }}"
on:
  push:
    branches:
      - development
    paths:
      - "src/post/**"
  pull_request:
    branches:
      - main
      - development
    paths:
      - "src/post/**"
jobs:
  post:
    runs-on: ubuntu-latest
    if: github.base_ref != 'main'
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POST_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POST_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POST_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U usr -d post_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DJANGO_ENV: production
      SECRET_KEY: ${{ secrets.POST_SECRET_KEY }}
      DATABASE_ENGINE: ${{ secrets.POST_DATABASE_ENGINE }}
      DATABASE_NAME: ${{ secrets.POST_DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.POST_DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.POST_DATABASE_PASSWORD }}
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 5432
      CELERY_BROKER_URL: ${{ secrets.POST_CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.POST_CELERY_RESULT_BACKEND }}
      DEBUG: false
      AUTH_SERVICE_URL: ${{ secrets.AUTH_SERVICE_URL }}
      SENTRY_DSN: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django djangorestframework celery django-celery-results requests psycopg2-binary django-environ pytest-django sentry-sdk

      - name: Run Django migrations
        run: |
          python src/post/manage.py makemigrations
          python src/post/manage.py migrate

      - name: Run tests
        run: pytest src/post/tests

      - name: Build docker image
        run: |
          docker build -t 'ghcr.io/reviving-hyves/hyves-back-end/post' -f src/post/Dockerfile .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Push Docker Image
        run: docker push ghcr.io/reviving-hyves/hyves-back-end/post
